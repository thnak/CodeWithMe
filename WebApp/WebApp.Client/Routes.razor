@using WebApp.Client.NavMenu.Drive
@using NavigationContext = Microsoft.AspNetCore.Components.Routing.NavigationContext

@code {
    private RenderFragment? NavBar { get; set; }

    private Task Navigating(NavigationContext arg)
    {
        if (arg.Path.StartsWith(PageRoutes.Drive.Name[1..]))
        {
            NavBar = @<DriveNavMenu/>;
        }

        return Task.CompletedTask;
    }

}

<MudDialogProvider MaxWidth="MaxWidth.False" Position="DialogPosition.Center"/>
<MudSnackbarProvider Class="toast-move-right-2-left"/>
<ThemeProvider/>
<MudPopoverProvider/>
<BlazoredToasts ErrorIcon="fa-solid fa-bug"
                IconType="IconType.FontAwesome"
                InfoIcon="fa-solid fa-info"
                PauseProgressOnHover="true"
                Position="ToastPosition.BottomRight"
                ShowProgressBar="true"
                ShowCloseButton="true"
                SuccessIcon="fa-regular fa-circle-check"
                Timeout="10" WarningIcon="fa-solid fa-triangle-exclamation"
                MaxToastCount="10"/>


<MudBreakpointProvider>
    <Router AppAssembly="@typeof(Program).Assembly" OnNavigateAsync="Navigating">
        <Found Context="routeData">
            <ErrorBoundary>
                <ChildContent>

                    <AuthorizeRouteView DefaultLayout="@typeof(MainLayout)" RouteData="@routeData">
                        <NotAuthorized>
                            <AccessDenied/>
                        </NotAuthorized>
                        <Authorizing>
                            <Loading/>
                        </Authorizing>
                    </AuthorizeRouteView>

                </ChildContent>
                <ErrorContent Context="ex">
                    <ErrorHanding ErrorMessage="@EncodeException(ex)"/>
                </ErrorContent>
            </ErrorBoundary>
        </Found>
        <NotFound>
            <NotFoundComponent/>
        </NotFound>
        <Navigating>
            <Loading/>
        </Navigating>
    </Router>
</MudBreakpointProvider>

<SectionContent SectionId="@MainLayout.NavMenu">
    @NavBar
</SectionContent>

<script>
    function closeLoading() {
        const progressWrapper = document.getElementById("progress-wrapper");
        progressWrapper.classList.add('closed');
    }
    closeLoading();
</script>