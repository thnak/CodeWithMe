@attribute [Route(PageRoutes.Account.SignIn)]
@attribute [Route(PageRoutes.Account.SignInError + "/{ErrorMessage}")]
@attribute [Route(PageRoutes.Account.SignInError + "/{ErrorMessage}/{ReturnUrl}")]
@layout SignInLayout

<div class="sign-up-form">
    <div class="welcome-back px-3 background d-none d-md-flex">
        <div class="firework-container" id="firework-container"></div>
        <MudText Typo="Typo.h5">@AppLang.Welcome_back_</MudText>
        <span>@AppLang.To_keep_connected_with_us_please_login_with_your_personal_info</span>
        <MudButton Href="@PageRoutes.Account.SignIn" Variant="Variant.Outlined" Color="Color.Secondary">@AppLang.Sign_In</MudButton>
    </div>
    
    <div class="main-form">
        <MudCarousel @ref="CarouselLogin" Class="mud-width-full" ShowArrows="false" @bind-SelectedIndex="CurrentIndex" ShowBullets="false" EnableSwipeGesture="false" AutoCycle="false" TData="object">
            <MudCarouselItem Transition="Transition.Slide" Color="@Color.Default">
                <div class="d-flex mud-width-full mud-height-full">
                    <MudForm @ref="FormUser" @bind-Errors="@FormError" @bind-IsValid="IsValid" Class="align-center justify-center mud-width-full">
                        <div class="form gap-3">
                            <AntiforgeryToken/>
                            <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">@AppLang.Create_Account</MudText>
                            <MudTextField T="string" @bind-Value="CurrentRequestModel.UserName" For="() => CurrentRequestModel.UserName" Adornment="Adornment.Start"
                                          UserAttributes="@(new Dictionary<string, object> { { "name", "Username" }, { "autocomplete", "current-username" } })"
                                          Class="mud-width-full" Required OnAdornmentClick="UsernameClickEvent" InputType="InputType.Text"
                                          ErrorText="@UserErrorText" Error="@(!string.IsNullOrEmpty(UserErrorText))"
                                          AdornmentColor="Color.Primary" Variant="Variant.Outlined" AdornmentIcon="fa-solid fa-user" Placeholder="@AppLang.Username">
                            </MudTextField>

                            <MudButton OnClick="UsernameProcess" Disabled="@Loading"
                                       Class="rounded-pill" Style="max-width: 400px"
                                       Color="Color.Primary"
                                       FullWidth Variant="Variant.Filled">
                                @if (Loading)
                                {
                                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                                    <MudText Class="ms-2">@AppLang.Processing</MudText>
                                }
                                else
                                {
                                    @AppLang.Sign_In
                                }
                            </MudButton>
                        </div>
                    </MudForm>
                </div>
            </MudCarouselItem>
            @* Password *@
            <MudCarouselItem Transition="Transition.Slide" Color="@Color.Default">
                <div class="d-flex mud-width-full mud-height-full">
                    <MudForm @ref="PasswordForm" @bind-Errors="@FormError" @bind-IsValid="IsValid" Class="align-center justify-center mud-width-full">
                        <div class="form gap-3">
                            <AntiforgeryToken/>
                            <MudText Color="Color.Primary" Align="Align.Center" Typo="Typo.h5">@AppLang.Create_Account</MudText>

                            <MudTextField T="string" @bind-Value="CurrentRequestModel.Password" For="() => CurrentRequestModel.Password" Adornment="Adornment.Start"
                                          UserAttributes="@(new Dictionary<string, object> { { "name", "Password" }, { "autocomplete", "current-password" } })"
                                          Class="mud-width-full" Required InputType="PasswordInput"
                                          ErrorText="@PasswordErrorText" Error="@(!string.IsNullOrEmpty(PasswordErrorText))"
                                          AdornmentColor="Color.Primary" Variant="Variant.Outlined" AdornmentIcon="@PasswordIcon" OnAdornmentClick="PasswordShowEvent"
                                          Placeholder="@AppLang.Password">
                            </MudTextField>

                            <MudButton OnClick="PasswordProcess" Disabled="@Loading"
                                       Class="rounded-pill" Style="max-width: 400px"
                                       Color="Color.Primary"
                                       FullWidth Variant="Variant.Filled">
                                @if (Loading)
                                {
                                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true"/>
                                    <MudText Class="ms-2">@AppLang.Processing</MudText>
                                }
                                else
                                {
                                    @AppLang.Sign_In
                                }
                            </MudButton>
                        </div>
                    </MudForm>
                </div>
            </MudCarouselItem>
            @* Password *@


            <MudCarouselItem Transition="Transition.Fade" Color="@Color.Default">
                <div class="d-flex flex-column align-center justify-center mud-width-full mud-height-full">
                    <div class="mud-width-full">
                        <MudText Typo="Typo.h5" Align="Align.Center">@AppLang.One_moment_please</MudText>
                        <MudProgressLinear Color="Color.Primary" Size="Size.Small" Indeterminate="true"/>
                        <div class="d-none">
                            <form id="loginForm" action="/api/Account/login" method="post">
                                <AntiforgeryToken/>
                                <div>
                                    <label for="UserName">Username:</label>
                                    <input type="text" id="UserName" name="username" value="@CurrentRequestModel.UserName" required>
                                </div>
                                <div>
                                    <label for="Password">Password:</label>
                                    <input type="password" id="Password" name="password" value="@CurrentRequestModel.Password" required>
                                </div>
                                <button type="submit" id="login-btn">Login</button>
                            </form>
                        </div>
                    </div>
                </div>
            </MudCarouselItem>

        </MudCarousel>

    </div>
</div>
<script src="./Pages/Account/Login.razor.js"></script>